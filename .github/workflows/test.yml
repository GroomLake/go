name: Build and Test go-codec
on: workflow_dispatch
jobs:
  tests:
    strategy:
      fail-fast: true
      matrix:
        go: [ '1.19', '1.17', '1.11' ]
        arch: [ amd64 ]
        os: [ ubuntu-latest ]
        include:
          - go: '1.19'
            arch: '386'
            os: ubuntu-latest
    runs-on: ${{ matrix.os }}
    env:
      GO111MODULE: 'on'
      COVER_GO_VERSION: '1.19'
      GOARCH: ${{ matrix.arch }}
    name: go ${{ matrix.go }} on ${{ matrix.arch }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}
      - name: Run tests
        shell: bash
        run: |
          cd codec
          go mod tidy
          t=( "" "safe" "notfastpath" "codecgen" )
          for i in "${t[@]}"; do go test "-tags=alltests ${i}" "-run=Suite" "-coverprofile=coverage.${{ matrix.go }}.${{ matrix.arch }}.${i}.txt"; done
      - uses: codecov/codecov-action@v3
        if: matrix.go == env.COVER_GO_VERSION
        with:
          directory: ./codec


# No need to go get, as github knows its working out of this folder
# Most of our code is now the same since go1.12. Only before that did we selectively compile files.
# Ok to jump around, and only test 1.11, and the last 2 production releases and master.
# Test i386 on last production release.

# coverage:
#   if: ${{ always() }}
#   needs: [ tests]
#   steps:
#     - uses: codecov/codecov-action@v3
#       directory: ./codec
#
# steps:
#   - uses: actions/checkout@v3
#     with:
#       fetch-depth: 0 # required for new-from-rev option in .golangci.yml
#
#        go-tag: [ '', 'safe', 'notfastpath', 'codecgen' ]
